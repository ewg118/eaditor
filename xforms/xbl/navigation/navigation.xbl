<?xml version="1.0" encoding="UTF-8"?>
<!--
	Based on navigation example by delcyon on orbeon.com, heavily modified by Ethan Gruber
	Function: this component generates a nested list EAD components for the table of contents, generated from the toc pipeline
	
	Installation Location:
	oxf:/xbl/eaditor/navigation/navigation.xbl
-->
<xbl:xbl xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xxf="http://orbeon.org/oxf/xml/xforms" xmlns:xbl="http://www.w3.org/ns/xbl"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xxbl="http://orbeon.org/oxf/xml/xbl" xmlns:oxf="http://www.orbeon.com/oxf/processors" xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:eaditor="https://github.com/ewg118/eaditor" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<xbl:binding element="eaditor|navigation">
		<xbl:template xxbl:transform="oxf:xslt">
			<xsl:transform version="2.0">
				<xsl:template match="eaditor:navigation">
					<xforms:group xbl:attr="ref" xxbl:scope="outer">
						<!-- Start copying the variables over that we need -->

						<xforms:var name="data" xxbl:scope="inner">
							<xxf:sequence select="." xxbl:scope="outer"/>
						</xforms:var>

						<!-- end external variable copying -->

						<!-- START MAIN GROUP-->
						<xforms:group xxbl:scope="inner">
							<!-- set instances with the value of current URL params -->
							<xforms:action ev:event="xforms-enabled" ev:target="#observer">
								<xforms:setvalue ref="instance('ead-id')" value="xxf:get-request-parameter('guide')"/>
								<xforms:setvalue ref="instance('c-id')" value="xxf:get-request-parameter('component')"/>
							</xforms:action>
							<xforms:group ref="$data">
								<xforms:var name="guide_id" select="@id"/>
								<h4>
									<xforms:group ref=".[string(instance('c-id'))]">
										<xforms:trigger appearance="minimal">
											<xforms:label value="@title"/>
											<xforms:action ev:event="DOMActivate">
												<xforms:load show="replace" resource="../core/?guide={'{$guide_id}'}"/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
									<xforms:group ref=".[not(string(instance('c-id')))]">
										<xforms:output ref="@title"/>
									</xforms:group>
								</h4>
								<xsl:choose>
									<xsl:when test="exists(@depth)">
										<xsl:call-template name="node">
											<xsl:with-param name="depth" select="@depth"/>
											<xsl:with-param name="current">1</xsl:with-param>
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="node">
											<xsl:with-param name="depth">5</xsl:with-param>
											<xsl:with-param name="current">1</xsl:with-param>
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</xforms:group>
							<xforms:model id="navigation-model">
								<xforms:instance id="ead-id">
									<ead-id/>
								</xforms:instance>
								<xforms:instance id="c-id">
									<c-id/>
								</xforms:instance>
							</xforms:model>
						</xforms:group>
						<!-- END MAIN GROUP -->
					</xforms:group>
				</xsl:template>

				<xsl:template name="node">
					<xsl:param name="depth" as="xs:integer"/>
					<xsl:param name="current" as="xs:integer"/>

					<xsl:if test="$current > 1">
						<li>
							<xforms:group ref=".[@id = instance('c-id')]">
								<b>
									<xforms:output value="concat(@level, ': ', @unittitle)"/>
								</b>
							</xforms:group>
							<xforms:group ref=".[not(@id = instance('c-id'))]">
								<xforms:trigger appearance="minimal">
									<xforms:label value="concat(@level, ': ', @unittitle)"/>
									<xforms:action ev:event="DOMActivate">
										<xforms:load show="replace" resource="../component/?guide={'{$guide_id}'}&amp;component={'{@id}'}"/>
									</xforms:action>
								</xforms:trigger>
							</xforms:group>
						</li>
					</xsl:if>
					<!-- Repeat over each child node of the root node -->
					<xsl:if test="$depth > 1">
						<xforms:group ref=".[count(*[local-name()='c']) &gt; 0]">
							<ul class="toc_ul">
								<xforms:repeat nodeset="*[local-name()='c']">
									<!-- if this element has children recurse into it -->
									<xsl:call-template name="node">
										<xsl:with-param name="current" select="$current + 1"/>
										<xsl:with-param name="depth" select="$depth - 1"/>
									</xsl:call-template>
								</xforms:repeat>
							</ul>
						</xforms:group>
					</xsl:if>
				</xsl:template>
			</xsl:transform>
		</xbl:template>
	</xbl:binding>
</xbl:xbl>
