<!-- 	author: Ethan Gruber, American Numismatic Society 
	last modified: May, 2011
	function: EAD geogname component; user selects local vocabulary (ties to solr for autosuggest)
	or geonames (refers to geonames.org APIs)
-->

<xbl:xbl xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
	xmlns:fr="http://orbeon.org/oxf/xml/form-runner" xmlns:xbl="http://www.w3.org/ns/xbl" xmlns:xxbl="http://orbeon.org/oxf/xml/xbl" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:opensearch="http://a9.com/-/spec/opensearch/1.1/" xmlns:oxf="http://www.orbeon.com/oxf/processors" xmlns:eaditor="https://github.com/ewg118/eaditor" xmlns:rss="http://purl.org/rss/1.0/"
	xmlns:res="http://www.w3.org/2005/sparql-results#">
	<xbl:binding id="eaditor-geogname" element="eaditor|geogname">
		<xbl:template>
			<xforms:group xbl:attr="model context ref bind" xxbl:scope="outer">
				<xbl:content includes="xforms|label,xforms|help,xforms|hint,xforms|alert"/>
				<xforms:group xxbl:scope="inner">
					<xforms:var name="binding" as="node()?">
						<xxforms:sequence select="." xxbl:scope="outer"/>
					</xforms:var>
					
					<xforms:action ev:event="xforms-enabled" ev:target="#observer">
						<xforms:setvalue ref="instance('interface-type')" if="not(string($binding))">geonames</xforms:setvalue>						
					</xforms:action>

					<xforms:group ref="$binding">
						<xforms:group ref=".[string(text())]">
							<div>
								<xforms:output ref=".">
									<xforms:label>Geographic Name</xforms:label>
								</xforms:output>
								<xforms:trigger appearance="minimal">
									<xforms:action ev:event="DOMActivate">
										<!-- delete all holdover values before removing bind, possible orbeon bug -->
										<xforms:setvalue ref="instance('temp')"/>
										<xforms:setvalue ref="instance('temp')/@href"/>
										<xforms:delete context="instance('geonames')/*"/>
										<xforms:delete context="instance('geoname-temp')/*"/>
										<xforms:setvalue ref="instance('search-query')"/>
										<xforms:delete nodeset="."/>
									</xforms:action>
									<xforms:label>
										<span class="glyphicon glyphicon-remove"/>
									</xforms:label>
								</xforms:trigger>
								<eaditor:attributes ref="$binding"/>
							</div>
						</xforms:group>
						<xforms:group ref=".[not(string(text()))]">
							<h4>Geographic Name</h4>
							<eaditor:attributes ref="$binding"/>
							<xforms:trigger appearance="minimal">
								<xforms:action ev:event="DOMActivate">
									<xforms:delete ev:event="DOMActivate" nodeset="."/>
								</xforms:action>
								<xforms:label>
									<span class="glyphicon glyphicon-remove"/>
								</xforms:label>
							</xforms:trigger>

							<div class="alert-warning alert alert-box"><span class="glyphicon glyphicon-exclamation-sign"/><strong>Warning:</strong> Element must contain content.</div>

							<div>
								<radiogroup>
									<xforms:select1 ref="instance('interface-type')" appearance="full">
										<xforms:label>Interface Type</xforms:label>
										<xforms:item>
											<xforms:label>Geonames</xforms:label>
											<xforms:value>geonames</xforms:value>
										</xforms:item>
										<xforms:item>
											<xforms:label>Getty TGN</xforms:label>
											<xforms:value>tgn</xforms:value>
										</xforms:item>
										<xforms:item>
											<xforms:label>Pleiades</xforms:label>
											<xforms:value>pleiades</xforms:value>
										</xforms:item>
										<xforms:item>
											<xforms:label>Local Vocabulary</xforms:label>
											<xforms:value>local</xforms:value>
										</xforms:item>
										<xforms:action ev:event="xforms-value-changed">
											<xforms:action if=". = 'geonames'">
												<!-- clear temp -->
												<xforms:setvalue ref="instance('temp')"/>
												<xforms:setvalue ref="instance('temp')/@href"/>
												<!-- remove temporary values, applicable when switching back to geonames from local -->
												<xforms:delete context="instance('geonames')/*"/>
												<xforms:delete context="instance('pleiades-response')/*"/>
												<xforms:setvalue ref="instance('search-query')"/>

												<!-- create attributes, clear $binding text when applicable -->
												<xforms:insert if="not($binding/@authfilenumber)" context="$binding" origin="xforms:attribute('authfilenumber', '')"/>
												<xforms:insert if="not($binding/@source)" context="$binding" origin="xforms:attribute('source', 'geonames')"/>

												<!-- set source if the attributes already exist -->
												<xforms:setvalue if="$binding/@source" ref="$binding/@source">geonames</xforms:setvalue>
												<xforms:toggle case="geonames-search"/>
											</xforms:action>
											<xforms:action if=". = 'tgn'">
												<!-- clear temp -->
												<xforms:setvalue ref="instance('temp')"/>
												<xforms:setvalue ref="instance('temp')/@href"/>
												<!-- remove temporary values, applicable when switching back to geonames from local -->
												<xforms:delete context="instance('geonames')/*"/>
												<xforms:delete context="instance('pleiades-response')/*"/>
												<xforms:setvalue ref="instance('search-query')"/>

												<!-- create attributes, clear $binding text when applicable -->
												<xforms:insert if="not($binding/@authfilenumber)" context="$binding" origin="xforms:attribute('authfilenumber', '')"/>
												<xforms:insert if="not($binding/@source)" context="$binding" origin="xforms:attribute('source', 'tgn')"/>

												<!-- clear authfilenumber and set source if the attributes already exist -->
												<xforms:setvalue if="$binding/@source" ref="$binding/@source">tgn</xforms:setvalue>
												<xforms:toggle case="tgn-search"/>
											</xforms:action>
											<xforms:action if=". = 'pleiades'">
												<!-- clear temp -->
												<xforms:setvalue ref="instance('temp')"/>
												<xforms:setvalue ref="instance('temp')/@href"/>
												<!-- remove temporary values, applicable when switching back to geonames from local -->
												<xforms:delete context="instance('geonames')/*"/>
												<xforms:delete context="instance('pleiades-response')/*"/>
												<xforms:setvalue ref="instance('search-query')"/>

												<!-- create attributes, clear $binding text when applicable -->
												<xforms:insert if="not($binding/@authfilenumber)" context="$binding" origin="xforms:attribute('authfilenumber', '')"/>
												<xforms:insert if="not($binding/@source)" context="$binding" origin="xforms:attribute('source', 'pleiades')"/>

												<!-- clear authfilenumber and set source if the attributes already exist -->
												<xforms:setvalue if="$binding/@source" ref="$binding/@source">pleiades</xforms:setvalue>
												<xforms:toggle case="pleiades-search"/>
											</xforms:action>
											<xforms:action if=". = 'local'">
												<!-- clear temp -->
												<xforms:setvalue ref="instance('temp')"/>
												<xforms:setvalue ref="instance('temp')/@href"/>
												<!-- delete attributes, clear $binding text when applicable -->
												<xforms:delete context="instance('geonames')/*"/>
												<xforms:delete context="instance('pleiades-response')/*"/>
												<!-- remove attributes -->
												<xforms:delete if="$binding/@authfilenumber" context="$binding/@authfilenumber"/>
												<xforms:delete if="$binding/@source" context="$binding/@source"/>

												<!-- load config if it hasn't already been loaded -->
												<xforms:action if="not(string(instance('config')/url))">

													<xforms:send submission="load-config"/>
												</xforms:action>
												<xforms:toggle case="local-autosuggest"/>
											</xforms:action>
										</xforms:action>
									</xforms:select1>
								</radiogroup>
							</div>
							<xforms:switch>
								<xforms:case id="geonames-search">
									<div>
										<xforms:input ref="instance('search-query')">
											<xforms:label>Search</xforms:label>
										</xforms:input>
										<xforms:trigger>
											<xforms:action ev:event="DOMActivate">
												<xforms:action if="not(string(instance('config')/url))">

													<xforms:send submission="load-config"/>
												</xforms:action>
												<xforms:delete context="instance('geonames')/*"/>
												<xforms:send submission="query-geonames"/>
											</xforms:action>
											<xforms:label>Search</xforms:label>
										</xforms:trigger>
									</div>

									<xforms:group ref=".[string-length('search-results')] &gt; 0">
										<p class="text-muted">
											<xforms:output ref="instance('search-results')"/>
										</p>
									</xforms:group>

									<xforms:group ref=".[count(instance('geonames')//geoname) &gt; 0]">
										<xforms:select1 ref="instance('temp')/@href" appearance="compact" id="geonames-list" size="10">
											<xforms:label>Location</xforms:label>
											<xforms:itemset nodeset="instance('geonames')//geoname">
												<xforms:label ref="label"/>
												<xforms:value ref="geonameId"/>
											</xforms:itemset>
											<xforms:setvalue ev:event="xforms-value-changed" ref="instance('temp')" value="instance('geonames')//geoname[geonameId = instance('temp')/@href]/label"/>
										</xforms:select1>
										<xforms:trigger>
											<xforms:label>Select</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="$binding/@authfilenumber" value="instance('temp')/@href"/>
												<xforms:setvalue ref="$binding" value="instance('temp')"/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
								</xforms:case>
								<xforms:case id="tgn-search">
									<div>
										<xforms:input ref="instance('search-query')">
											<xforms:label>Search</xforms:label>
										</xforms:input>
										<xforms:trigger>
											<xforms:action ev:event="DOMActivate">
												<xforms:var name="search_query" select="string-join(tokenize(instance('search-query'), ' '), ' AND ')"/>
												<xforms:setvalue ref="instance('sparqlQuery')" value="normalize-space(replace(instance('sparqlQueryTemplate'), 'SEARCH_QUERY', $search_query))"/>
												<xforms:send submission="query-getty"/>
											</xforms:action>
											<xforms:label>Search</xforms:label>
										</xforms:trigger>
									</div>

									<xforms:group ref=".[string-length('search-results')] &gt; 0">
										<p class="text-muted">
											<xforms:output ref="instance('search-results')"/>
										</p>
									</xforms:group>

									<xforms:group ref=".[count(instance('getty-response')//res:result) &gt; 0]">
										<xforms:select1 ref="instance('temp')/@href" appearance="compact" length="20">
											<xforms:label>Location</xforms:label>
											<xforms:itemset nodeset="instance('getty-response')//res:result">
												<xforms:label ref="res:binding[@name='label']/res:literal"/>
												<xforms:value ref="res:binding[@name='c']/res:uri"/>
											</xforms:itemset>
											<xforms:setvalue ev:event="xforms-value-changed" ref="instance('temp')" value="instance('getty-response')//res:result[res:binding[@name='c']/res:uri =
												instance('temp')/@href]/res:binding[@name='def']/res:literal"/>
										</xforms:select1>
										<xforms:trigger>
											<xforms:label>Select</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="$binding/@authfilenumber" value="tokenize(instance('temp')/@href, '/')[last()]"/>
												<xforms:setvalue ref="$binding" value="instance('getty-response')//res:result[res:binding[@name='c']/res:uri =
													instance('temp')/@href]/res:binding[@name='label']/res:literal"/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>

								</xforms:case>
								<xforms:case id="pleiades-search">
									<div>
										<xforms:input ref="instance('search-query')">
											<xforms:label>Search</xforms:label>
										</xforms:input>
										<xforms:trigger>
											<xforms:action ev:event="DOMActivate">
												<xforms:delete context="instance('pleiades-response')/*"/>
												<xforms:send submission="query-pleiades"/>
											</xforms:action>
											<xforms:label>Search</xforms:label>
										</xforms:trigger>
									</div>

									<xforms:group ref=".[string-length('search-results')] &gt; 0">
										<p class="text-muted">
											<xforms:output ref="instance('search-results')"/>
										</p>
									</xforms:group>

									<xforms:group ref=".[count(instance('pleiades-response')//rss:item) &gt; 0]">
										<xforms:select1 ref="instance('temp')/@href" appearance="compact" id="pleiades-list" size="10">
											<xforms:label>Location</xforms:label>
											<xforms:itemset nodeset="instance('pleiades-response')//rss:item">
												<xforms:label ref="rss:title"/>
												<xforms:value ref="rss:link"/>
											</xforms:itemset>
											<xforms:setvalue ev:event="xforms-value-changed" ref="instance('temp')" value="instance('pleiades-response')//rss:item[rss:link =
												instance('temp')/@href]/rss:description"/>

										</xforms:select1>
										<xforms:trigger>
											<xforms:label>Select</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="$binding/@authfilenumber" value="tokenize(instance('temp')/@href, '/')[5]"/>
												<xforms:setvalue ref="$binding" value="instance('pleiades-response')//rss:item[rss:link = instance('temp')/@href]/rss:title"/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
								</xforms:case>
								<xforms:case id="local-autosuggest">
									<div>
										<xforms:input ref="instance('search-query')">
											<xforms:label>Term</xforms:label>
										</xforms:input>
										<xforms:trigger>
											<xforms:action ev:event="DOMActivate">
												<xforms:send submission="suggest-term"/>
											</xforms:action>
											<xforms:label>Search</xforms:label>
										</xforms:trigger>
										<xforms:trigger>
											<xforms:label>Add New</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="$binding" value="instance('search-query')"/>
											</xforms:action>
										</xforms:trigger>
									</div>
									<xforms:group ref=".[count(instance('solr-response')/lst[@name='terms']//int) &gt; 0]">
										<xforms:select1 ref="instance('temp')" appearance="compact" size="10">
											<xforms:label>Location</xforms:label>
											<xforms:itemset nodeset="instance('solr-response')/lst[@name='terms']//int">
												<xforms:label ref="@name"/>
												<xforms:value ref="@name"/>
											</xforms:itemset>
										</xforms:select1>
										<xforms:trigger>
											<xforms:label>Select</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<xforms:setvalue ref="$binding" value="instance('temp')"/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
									<xforms:group ref=".[string-length(instance('control-instance')/local-message) &gt; 0]">
										<p>
											<xforms:output ref="instance('control-instance')/local-message"/>
										</p>
									</xforms:group>
								</xforms:case>
							</xforms:switch>

							<xforms:group ref="instance('temp')[string-length(@href) &gt; 0]">
								<div>
									<xforms:output ref=".">
										<xforms:label>Definition</xforms:label>
									</xforms:output>
									<xforms:trigger appearance="minimal">
										<xforms:label>
											<span class="glyphicon glyphicon-new-window"/>
										</xforms:label>
										<xforms:hint ref="@href"/>
										<xforms:load ev:event="DOMActivate" resource="{@href}" show="new"/>
									</xforms:trigger>
								</div>
							</xforms:group>
							<hr/>
						</xforms:group>
					</xforms:group>
					<!-- ********************************************************************** -->
					<xforms:model id="geogname-model" xmlns:xi="http://www.w3.org/2001/XInclude">
						<xforms:instance id="exist-config">
							<xi:include href="../../../exist-config.xml"/>
						</xforms:instance>
						<xforms:instance id="config">
							<config xmlns=""/>
						</xforms:instance>
						<!-- authentication -->
						<xforms:instance id="collections-list" xxforms:exclude-result-prefixes="#all">
							<collections xmlns=""/>
						</xforms:instance>

						<xforms:instance id="dump">
							<dump xmlns=""/>
						</xforms:instance>

						<xforms:instance id="control-instance">
							<control xmlns="">
								<collection-name/>
								<local-message/>
							</control>
						</xforms:instance>
						<!-- temp instance used by both interfaces to avoid inconsistent referencing to $binding -->
						<xforms:instance id="temp">
							<temp href="" xmlns=""/>
						</xforms:instance>
						<!-- instance of standard abbreviations for AACR2 Chapter 23 compliance-->
						<xforms:instance id="abbreviations">
							<abbreviations xmlns="">
								<country code="US">
									<place abbr="Ala.">Alabama</place>
									<place abbr="Alaska">Alaska</place>
									<place abbr="Ariz.">Arizona</place>
									<place abbr="Ark.">Arkansas</place>
									<place abbr="Calif.">California</place>
									<place abbr="Colo.">Colorado</place>
									<place abbr="Conn.">Connecticut</place>
									<place abbr="Del.">Delaware</place>
									<place abbr="D.C.">Washington, D.C.</place>
									<place abbr="Fla.">Florida</place>
									<place abbr="Ga.">Georgia</place>
									<place abbr="Hawaii">Hawaii</place>
									<place abbr="Idaho">Idaho</place>
									<place abbr="Ill.">Illinois</place>
									<place abbr="Ind.">Indiana</place>
									<place abbr="Iowa">Iowa</place>
									<place abbr="Kans.">Kansas</place>
									<place abbr="Ky.">Kentucky</place>
									<place abbr="La.">Louisiana</place>
									<place abbr="Maine">Maine</place>
									<place abbr="Md.">Maryland</place>
									<place abbr="Mass.">Massachusetts</place>
									<place abbr="Mich.">Michigan</place>
									<place abbr="Minn.">Minnesota</place>
									<place abbr="Miss.">Mississippi</place>
									<place abbr="Mo.">Missouri</place>
									<place abbr="Mont.">Montana</place>
									<place abbr="Nebr.">Nebraska</place>
									<place abbr="Nev.">Nevada</place>
									<place abbr="N.H.">New Hampshire</place>
									<place abbr="N.J.">New Jersey</place>
									<place abbr="N.M.">New Mexico</place>
									<place abbr="N.Y.">New York</place>
									<place abbr="N.C.">North Carolina</place>
									<place abbr="N.D.">North Dakota</place>
									<place abbr="Ohio">Ohio</place>
									<place abbr="Okla.">Oklahoma</place>
									<place abbr="Oreg.">Oregon</place>
									<place abbr="Pa.">Pennsylvania</place>
									<place abbr="R.I.">Rhode Island</place>
									<place abbr="S.C.">South Carolina</place>
									<place abbr="S.D">South Dakota</place>
									<place abbr="Tenn.">Tennessee</place>
									<place abbr="Tex.">Texas</place>
									<place abbr="Utah">Utah</place>
									<place abbr="Vt.">Vermont</place>
									<place abbr="Va.">Virginia</place>
									<place abbr="Wash.">Washington</place>
									<place abbr="W.Va.">West Virginia</place>
									<place abbr="Wis.">Wisconsin</place>
									<place abbr="Wyo.">Wyoming</place>
									<place abbr="A.S.">American Samoa</place>
									<place abbr="Guam">Guam</place>
									<place abbr="M.P.">Northern Mariana Islands</place>
									<place abbr="P.R.">Puerto Rico</place>
									<place abbr="V.I.">U.S. Virgin Islands</place>
								</country>
								<country code="CA">
									<place abbr="Alta.">Alberta</place>
									<place abbr="B.C.">British Columbia</place>
									<place abbr="Alta.">Manitoba</place>
									<place abbr="Man.">Alberta</place>
									<place abbr="N.B.">New Brunswick</place>
									<place abbr="Nfld.">Newfoundland and Labrador</place>
									<place abbr="N.W.T.">Northwest Territories</place>
									<place abbr="N.S.">Nova Scotia</place>
									<place abbr="NU">Nunavut</place>
									<place abbr="Ont.">Ontario</place>
									<place abbr="P.E.I.">Prince Edward Island</place>
									<place abbr="Que.">Quebec</place>
									<place abbr="Sask.">Saskatchewan</place>
									<place abbr="Y.T.">Yukon</place>
								</country>
								<country code="AU">
									<place abbr="A.C.T.">Australian Capital Territory</place>
									<place abbr="J.B.T.">Jervis Bay Territory</place>
									<place abbr="N.S.W.">New South Wales</place>
									<place abbr="N.T.">Northern Territory</place>
									<place abbr="Qld.">Queensland</place>
									<place abbr="S.A.">South Australia</place>
									<place abbr="Tas.">Tasmania</place>
									<place abbr="Vic.">Victoria</place>
									<place abbr="W.A.">Western Australia</place>
								</country>
							</abbreviations>
						</xforms:instance>

						<xforms:instance id="search-query">
							<query/>
						</xforms:instance>

						<!-- total results -->
						<xforms:instance id="search-results">
							<results/>
						</xforms:instance>

						<!-- geonames specific instances -->
						<xforms:instance id="geoname-query-response">
							<geoname/>
						</xforms:instance>
						<xforms:instance id="geoname-temp">
							<geonames xmlns=""/>
						</xforms:instance>
						<xforms:instance id="geonameId">
							<geonameId/>
						</xforms:instance>
						<xforms:instance id="geonames">
							<geonames xmlns=""/>
						</xforms:instance>
						<xforms:instance id="geoname-template">
							<geoname xmlns="">
								<label/>
								<geonameId/>
							</geoname>
						</xforms:instance>

						<!-- instances for nomisma/pleiades -->
						<xforms:instance id="pleiades-response">
							<feed xmlns=""/>
						</xforms:instance>

						<!-- getty TNG instances -->
						<xforms:instance id="sparqlQueryTemplate">
							<query><![CDATA[PREFIX gvp: <http://vocab.getty.edu/ontology#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX luc: <http://www.ontotext.com/owlim/lucene#>
PREFIX tgn: <http://vocab.getty.edu/tgn/>
SELECT ?c ?label ?def WHERE {
?c a gvp:AdminPlaceConcept; skos:inScheme tgn: ;
gvp:prefLabelGVP/xl:literalForm ?label ;
skos:scopeNote/rdf:value ?def ;
luc:term "SEARCH_QUERY"} LIMIT 20]]>
							</query>
						</xforms:instance>
						<xforms:instance id="sparqlQuery">
							<query xmlns=""/>
						</xforms:instance>
						<xforms:instance id="getty-response">
							<sparql xmlns="http://www.w3.org/2005/sparql-results#"/>
						</xforms:instance>

						<!-- local vocabulary -->
						<xforms:instance id="solr-response">
							<response xmlns=""/>
						</xforms:instance>

						<!-- mint type radio button -->
						<xforms:instance id="interface-type">
							<interface/>
						</xforms:instance>

						<!-- ********* SUBMISSIONS ***********-->
						<xforms:submission id="load-config" serialization="none" method="get"
							action="{instance('exist-config')/url}eaditor/{xxforms:get-session-attribute('collection-name')}/config.xml" replace="instance" instance="config"
							xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
							<xforms:message ev:event="xforms-submit-error" level="modal">Error Loading Config.</xforms:message>
						</xforms:submission>

						<!-- search for matching keywords -->
						<xforms:submission id="query-geonames" serialization="none" method="get"
							action="http://api.geonames.org/search?q={instance('search-query')}&amp;maxRows=20&amp;lang=en&amp;username={instance('config')/geonames_api_key}&amp;style=full&amp;minChars=2"
							instance="geoname-temp" replace="instance">
							<xforms:action ev:event="xforms-submit-done">
								<!-- handle total -->
								<xforms:var name="total" select="number(instance('geoname-temp')/totalResultsCount)"/>
								<xforms:setvalue if="$total = 0" ref="instance('search-results')">No results found for query.</xforms:setvalue>
								<xforms:setvalue if="$total &gt; 0 and $total &lt;= 20" ref="instance('search-results')" value="concat('Displaying ', $total, ' result(s).')"/>
								<xforms:setvalue if="$total &gt; 20" ref="instance('search-results')" value="concat('Displaying first 20 of ', $total, ' result(s).')"/>
								<!-- construct AACR2 label -->
								<xforms:action xxforms:iterate="instance('geoname-temp')//geoname">
									<xforms:var name="countryCode" select="countryCode"/>
									<xforms:var name="countryName" select="countryName"/>
									<xforms:var name="name" select="name"/>
									<xforms:var name="adminName1" select="adminName1"/>
									<xforms:var name="geonameId" select="geonameId"/>
									<xforms:var name="fcode" select="fcode"/>
									<!-- set a value equivalent to AACR2 standard for US, AU, CA, and GB.  This equation deviates from AACR2 for Malaysia since standard abbreviations for territories cannot be found -->
									<xforms:setvalue ref="instance('geoname-template')/label" value="if ($countryCode = 'US' or $countryCode = 'AU' or $countryCode = 'CA') then if ($fcode = 'ADM1')
										then $name else concat($name, ' (', instance('abbreviations')/country[@code=$countryCode]/place[. = $adminName1]/@abbr, ')') else if ($countryCode= 'GB') then
										if ($fcode = 'ADM1') then $name else concat($name, ' (', $adminName1, ')') else if ($fcode = 'PCLI') then $name else concat($name, ' (', $countryName, ')')"/>
									<xforms:setvalue ref="instance('geoname-template')/geonameId" value="$geonameId"/>
									<xforms:insert context="instance('geonames')" origin="instance('geoname-template')" nodeset="./child::node()[last()]"/>
								</xforms:action>
							</xforms:action>
						</xforms:submission>

						<!-- query pleiades for ancient places -->
						<xforms:submission id="query-pleiades" serialization="none" method="get" action="https://pleiades.stoa.org/search_rss?Title={instance('search-query')}&amp;portal_type=Place"
							instance="pleiades-response" replace="instance">
							<xforms:header>
								<xforms:name>User-Agent</xforms:name>
								<xforms:value>XForms/EADitor</xforms:value>
							</xforms:header>
							<xforms:message ev:event="xforms-submit-error" level="modal">Unable to communicate with Pleiades RSS feed.</xforms:message>
							<xforms:action ev:event="xforms-submit-done">
								<!-- handle total -->
								<xforms:var name="total" select="count(instance('pleiades-response')//rss:item)"/>
								<xforms:setvalue if="$total = 0" ref="instance('search-results')">No results found for query.</xforms:setvalue>
								<xforms:setvalue if="$total &gt; 0 and $total &lt;= 20" ref="instance('search-results')" value="concat('Displaying ', $total, ' result(s).')"/>
								<xforms:setvalue if="$total &gt; 20" ref="instance('search-results')" value="concat('Displaying first 20 of ', $total, ' result(s).')"/>
							</xforms:action>
						</xforms:submission>

						<xforms:submission id="query-getty" action="http://vocab.getty.edu/sparql?query={encode-for-uri(instance('sparqlQuery'))}" ref="instance('getty-response')" replace="instance"
							method="get">
							<xforms:header>
								<xforms:name>User-Agent</xforms:name>
								<xforms:value>XForms/EADitor</xforms:value>
							</xforms:header>
							<xforms:header>
								<xforms:name>Accept</xforms:name>
								<xforms:value>application/sparql-results+xml</xforms:value>
							</xforms:header>
							<xforms:message ev:event="xforms-submit-error" level="modal">SPARQL query failed.</xforms:message>
							<xforms:action ev:event="xforms-submit-done">
								<xforms:var name="total" select="count(instance('getty-response')//res:result)"/>
								<xforms:setvalue if="$total = 0" ref="instance('search-results')">No results found for query.</xforms:setvalue>
								<xforms:setvalue if="$total &gt; 0 and $total &lt;= 20" ref="instance('search-results')" value="concat('Displaying ', $total, ' result(s).')"/>
								<xforms:setvalue if="$total &gt; 20" ref="instance('search-results')" value="concat('Displaying first 20 of ', $total, ' result(s).')"/>
							</xforms:action>
						</xforms:submission>

						<!-- local vocabulary-->
						<xforms:submission id="suggest-term" serialization="none" method="get"
							action="{instance('config')/solr_published}terms?terms.fl=geogname_facet&amp;terms.limit=25&amp;terms.sort=index&amp;terms.regex.flag=case_insensitive&amp;terms.regex=.*{instance('search-query')}.*"
							instance="solr-response" replace="instance">
							<xforms:message ev:event="xforms-submit-error" level="modal">Unable to query Solr.</xforms:message>
							<xforms:action ev:event="xforms-submit-done">
								<!-- set or clear message based on number of results found -->
								<xforms:setvalue ref="instance('control-instance')/local-message" if="count(instance('solr-response')/lst[@name='terms']//int) = 0">No matching terms
									found.</xforms:setvalue>
								<xforms:setvalue ref="instance('control-instance')/local-message" if="count(instance('solr-response')/lst[@name='terms']//int) &gt; 0"/>
							</xforms:action>
						</xforms:submission>
					</xforms:model>
				</xforms:group>
			</xforms:group>
		</xbl:template>
	</xbl:binding>

</xbl:xbl>
